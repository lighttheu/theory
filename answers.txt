1. Что подразумевается под тестовой средой?
 
Совокупность неких условий необходимых для проведения тестирования, включает в себя программное и аппаратное обеспечение. Будь то новенький айфон или винда98 на вируталке. Где, как, какая ОС, какой браузер, мобил или декстоп, вот что нам диктует среда. Если моя задача сЪесть бургер, мне нужно знать условия: он из бургеркинга или Макдака мне надо сидеть внутри помещения или можно выйти, он должен быть теплым или можно остывший. Нельзя провести просто проверку, она должна быть выполнена где-то, т.е. в тестовой среде.

2.В чем отличие build от release?

Билд - это понятие из разговоров создания преложения, билды делают разработчики и тестируют тестировщики, один другой пятый десятый. Релиз - для пользователя, о блинах о не знает да и не должен, зачем ему это. Релиз - номер даваемый П0 при передаче конечному пользователю. Билды - это много разных видов сырого или печеного теста при попытке создать тот самый вкус, а релиз - это готовая булочка, которую отдают посетителю.

3.Основные фазы тестирования?

Pre-Alpha: ПО является прототипом. Мы слепили голема, но не оживили
Alpha: самый ранняя версия; мы слепили голема, оживили и даже начертили букву ему на лбу, начертаешь символа дал парочку заданий голому и тот их выполнил
Beta: По стабильно, выпускается для некоторых пользователей, для дальнейшего тестирования. Это значит от колдуна-создателя голема мы передаем рёва пользователя подмастерью и просто слуге, дабы уяснить как этот голем слушается простых смертных, но имеющих представления о том с чем они имеют дела
Release Candidate (RC): Внесены изменения/исправлены ошибки по результатам бэта тестирования. Проще говоря нашего голема доверяют ближайшему другу колдуна и заходившему соседу
Release: Все работает ПО выпущена для общественности. Наш голем безопасен и стабилен, даже ленивые дети из деревни могут попросить его принести гроздь винограда

4.Что такое импакт анализ?

Он же анализ влияния. Исследование которое позволяет узнать затронутые места в проекте при разработке новой или изменения старой функциональности и то на сколько они были затронуты. Чет не особо это понятно, это как, все ли тут протестировано? или все или изменил мы если? Скорее так. Что-то произошло, что-то изменилось, насколько это повлияло на ситуацию.

5.Критерии выбора тестов?

Критерий должен быть: достаточным, в то же время полным, надежным и самое главное легко проверяемым. Типа вот у нас есть кружка, как мы ее проверь, она целая, без сколов и трещин - достаточно и полно; надежно ибо дырявая кружка проверку не пройдет и проверяемо - понятно что искать при проверке.

6.Принципы тестирования?

Тестирование демонстрирует наличие дефектов

Исчерпывающее тестирование недостижимо - сколку людей столько и мнений, то есть столько и тестов, столовую ложку при желании можно столько тестов придумать, что жизни не хватит все проверить, поэтому и пытаться не стоит, надо понять в чем суть и сосредоточится на этом

Раннее тестирование - баги, они повсюду, нельзя написать код без ошибок кроме хэлло ворлд по учебнику ( и то, знаете ли, почему нет). Задача тестировщика прикинуть где ловить бага как можно раньше, чтоб его исправить, по такому принципу всевидящее око родителя знает, что его чадо не застелило постель, хотя технички через стену этого всего и не видать, но, зная характер этого ребенка можно с огромной долей вероятности это предположить (и оказаться правым)

Скопление/кластеризация дефектов - баги ходят стаями, почему, похоже это стадные животные, да и чем сложнее фунционал тем больше вероятность обнаружить там больше одного бага. Почему так? То что происходит к коде это магия, а у каждого разработчика магия своя и если мы поставим рядом некроманта и целителя, то они вернут к жизни отряд, но по разному и работать потом с этими ребятами тоже надо по разному. А еще вместе они работать не захотят. 

Парадокс пестицида - чем больше мы проверяем что-то тем с меньшей вероятностью мы там что-то найдем. Ну например мы проверяем удобоваримый вид учеников в средней школе, если мы зациклится на "белый верх+черный низ", то в какой-то момент окажется что все так одеты и вроде проверка пройдена, но у ребят фиолетовые волосы и татуировки на лице - что никак не отвечает необходимым требованиям официально делового вида.

Тестирование зависит от контекста -  тут надо понимать что именно мы тестируем и зачем; мы по разному должны измерять тесты и не класть в одну корзину: текст съехал на 2 мм и cvc  код вместе с номером карты попал в руки посторонних людей; что допустимо, а что нет; какие могут быть последствия для бизнеса и для репутации от  разного рода ошибок.

Заблуждение об отсутствии ошибок - что толку что у тебя офигенно мягкое полотенце если оно из водоотталкивающего материала и ты им вытереться не можешь.

Garbage in, garbage out (GIGO) - если мы тестируем рецепт и готовим салатик с просроченной колбасой, то ожидать нормас салатик на выходе не выйдет, салат будет испорчен, даже если рецепт хорош. Хотите протестить салат - берите свежую колбасу.

7.Что такое независимое тестирование?

Чтобы получить максимально независимую оценку, нужен максимально непредвзятый оценщик. Хозяин дома видит его замечательным, его заклятый друг находит там всевозможные недостатки, а вот незаинтересованное лицо может трезво увидеть что цвет стен вполне себе, а трещины на потолке ситуацию портят. 

8.Что такое тестирование со сдвигом влево?

Это слева на право идет чтение или движение от прошлого к будущему, когда мы даем тестировщик билды - это былина, сдвиг влево - мы даем тестировщик требования к проекту, чтоб к билды нас ждали готовые тест Бейсики, тысячи их, да и в самих требования уже можно что-то уточнить.

9.Почему тестирование делится на отдельные этапы?

Каждый этап испытаний имеет свое назначение 
Проще управлять поэтапно 
Мы можем запустить разные тесты в разных средах 
Производительность и качество тестирования улучшаются с помощью поэтапного тестирования

10.Какие есть этапы тестирования?

Всего принято выделять 7 этапов тестирования:

Работа с требованиями. Знакомство с требованиями заказчика, что должен из себя представлять итоговый продукт, обсуждение.

Разработка стратегии тестирования. Оценка сроков тестирования, выявление среды тестирования, объединение всей информации, полученной при работе с требованиями.

Создание тестовой документации. Написание сценариев, которые позволят проверить функционал.

Тестирование прототипа. Тестирование основного функционала продукта, корректировка целей, добавление фичей.

Основное тестирование. Выполнение общей проверки продукта.

Стабилизация. На данном этапе происходит работа над устранением багов.

Эксплуатация. Проводится регресс-тестирование, устранение ошибок, которые нашел конечный пользователь.
